<?php
/**
 * Created by PhpStorm.
 * User: brabhamm
 * Date: 2/25/18
 * Time: 3:27 PM
 */

/**
 * Tests generation of DMC Floss.
 *
 * @group dmc_floss
 */
namespace Drupal\Tests\dmc_floss\Unit\FlossQuery;

use Drupal\Tests\UnitTestCase;
use Drupal\dmc_floss\DmcFlossContent;
use PHPUnit_Framework_MockObject_MockObject;

class UnitTestCaseTest extends UnitTestCase {

  /**
   * The mocked inventory system.
   * @var
   */
  protected $dmc_floss_service;

  public function setUp() {
    parent::setUp(); // TODO: Change the autogenerated stub
    $this->dmc_floss_service = $this->getMockBuilder('\Drupal\dmc_floss\DmcFlossContent')
      ->disableOriginalConstructor()
      ->getMock();
  }

  /**
   * Checking inventory for a valid test.
   */
  public function testCheckInventory() {
    $inventory_status_valid = $this->getMockBuilder('\Drupal\dmc_floss\DmcFlossContent')
      ->setConstructorArgs([
        $this->dmc_floss_service
      ])
      ->getMock();
    $inventory_status_valid->method('checkInventory')
      ->willReturn('');
    var_dump($inventory_status_valid);
    $this->assertEquals($inventory_status_valid->field_dmc_inventory_status[0]->value, 'h');
    $this->assertEquals($inventory_status_valid->field_dmc_quantity[0]->value, 1);

    /*
    $inventory_test = new DmcFlossContent();
    $inventory_test->checkInventory(150);
    $this->assertEquals($inventory_test->field_dmc_inventory_status[0]->value, 'h');
    $this->assertEquals($inventory_test->field_dmc_quantity[0]->value, 1);
    */
  }

  public function testNoFlossFound() {
    /*
    $inventory_test = new DmcFlossContent();
    $inventory_test->checkInventory(1);
    $this->assertEquals($inventory_test, NULL);
    */
  }
}
