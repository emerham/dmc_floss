<?php
/**
 * Created by PhpStorm.
 * User: brabhamm
 * Date: 2/25/18
 * Time: 3:27 PM
 */

/**
 * Tests generation of DMC Floss.
 *
 * @group dmc_floss
 */

namespace Drupal\Tests\dmc_floss\Unit\FlossQuery;

use Drupal\Tests\UnitTestCase;
use Drupal\dmc_floss\DmcFlossContent;

class UnitTestCaseTest extends UnitTestCase {

  /**
   * The mocked inventory system.
   *
   * @var
   */
  protected $dmc_floss_service;

  public function setUp() {
    parent::setUp(); // TODO: Change the autogenerated stub
    $this->dmc_floss_service = $this->getMockBuilder('\Drupal\dmc_floss\DmcFlossContent')
      ->disableOriginalConstructor()
      ->getMock();
  }

  /**
   * Checking inventory for a valid test.
   */
  public function testCheckInventory() {
    $this->dmc_floss_service->expects($this->any())
      ->method('checkInventory')
      ->will($this->returnValueMap([
        'status' => 'Have',
        'count' => 1,
      ]));
    $this->assertArrayEquals($this->dmc_floss_service, ['status' => 'Have', 'count' => 1]);
    /*
    $inventory_status_valid = $this->getMockBuilder('\Drupal\dmc_floss\DmcFlossContent')
      ->setConstructorArgs([
        $this->dmc_floss_service
      ])
      ->getMock();
    $inventory_status_valid->method('checkInventory')
      ->willReturn(['status' => 'Have', 'count' => '1']);
    $first_result = $inventory_status_valid->checkInventory(150);
    $this->assertEquals($first_result['status'], 'Have');
    $this->assertEquals($first_result['count'], 1);
    */
    /*
    $inventory_test = new DmcFlossContent();
    $inventory_test->checkInventory(150);
    $this->assertEquals($inventory_test->field_dmc_inventory_status[0]->value, 'h');
    $this->assertEquals($inventory_test->field_dmc_quantity[0]->value, 1);
    */
  }

  public function testNoFlossFound() {
    /*
    $inventory_test = new DmcFlossContent();
    $inventory_test->checkInventory(1);
    $this->assertEquals($inventory_test, NULL);
    */
    $this->dmc_floss_service->method('checkInventory')
      ->willReturn(NULL);
    $this->assertEquals($this->dmc_floss_service->checkInventory(1), NULL);
  }
}
